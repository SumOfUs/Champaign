- klass = "form-element-creator-#{form.id}"
= render partial: 'shared/error_messages', locals: {target: form_element }
= form_for [form, form_element], remote: true, html: {class: "form-element #{klass}", id: 'new_collection_element'}  do |f|
  .form-group
    = label_with_tooltip(f, :data_type, t('form_elements.data_type'), t('tooltips.form_elements.data_type'))
    - type_names = { 'text' => "text (single line)", "paragraph" => 'text (multi-line)' }
    - options = FormElement::VALID_TYPES.map{ |type| [type_names.fetch(type, type), type] }
    = f.select :data_type, options_for_select(options), {}, class: 'form-control'
  .form-group data-editor-role="label"
    = label_with_tooltip(f, :label, t('form_elements.label'), t('tooltips.form_elements.label'))
    = f.text_field :label,  class: 'form-control', placeholder: t('form_elements.label_suggestion')
  .form-group.clearfix data-editor-role="name"
    = label_with_tooltip(f, :data_type, t('form_elements.name'), t('tooltips.form_elements.name'))
    = f.text_field :name,  class: 'form-control typeahead typeahead--uninitialized', placeholder: t('form_elements.name_suggestion')
  .form-group data-editor-role="manyChoices"
    = label_with_tooltip(f, :many_choices, t('form_elements.choices'), t('tooltips.form_elements.many_choices'))
    .form-element__many-choices-field
      = text_area_tag 'form_element[many_choices]', '', class: 'form-control'
  .form-group data-editor-role="choices"
    = label_with_tooltip(f, :choices, t('form_elements.choices'), t('tooltips.form_elements.choices'))
    .form-element__choice-fields
      .form-element__choice-field
        = f.text_field :choices, class: 'form-control', name: 'form_element[choices][]'
        a.form-element__remove-choice
          small
            span.glyphicon.glyphicon-remove
    a.form-element__add-choice = t('form_elements.add_choice')
  p
    a.reveal-default-value data-editor-role="defaultRevealer"
      = t('form_elements.add_default_value')
    | &nbsp; | &nbsp;
    a.reveal-display-mode data-editor-role="revealDisplayMode"
      = t('form_elements.change_visibility')
  .form-group.default-value-field data-editor-role="defaultValue"
    = label_with_tooltip(f, :default_value, t('form_elements.default_value'), t('tooltips.form_elements.default_value'))
    = f.text_field :default_value,  class: 'form-control', placeholder: t('form_elements.default_value_suggestion')

  .form-group.display-mode-field data-editor-role="displayMode"
    = label_with_tooltip(f, :display_mode, t('form_elements.display_mode'), t('tooltips.form_elements.display_mode'))
    = f.select :display_mode, FormElement.display_modes.map {|k, v| [t("form_elements.display_modes.#{k}"), k]},
                              {}, class: 'form-control'
  .form-group data-editor-role="requirable"
    .checkbox
      = f.label :required do
        = f.check_box :required
        = t('plugins.petition.make_required')

  .form-group
    button.btn.btn-default.xhr-feedback = t('plugins.petition.add_field')

javascript:
  $(document).ready(function(){
    window.ee.emit('form:edit');
    new window.FormElementCreator({el: '.#{klass}'});
    new window.ListEditor({el: '.#{klass}'});
    $('.reveal-default-value').on('click', function(e){
      $('.default-value-field').removeClass('hidden-closed');
    })
    $('.reveal-display-mode').on('click', function(e){
      $('.display-mode-field').removeClass('hidden-closed');
    })
  });
