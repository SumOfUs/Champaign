// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CallToolDrillDown Snapshots pre-selects nothing if the passed filter is not first: CallToolDrillDownWithFilters 1`] = `
<div
  className="CallToolDrillDown"
>
  <div
    key="country"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={false}
      label="Country"
      name="filter-targets-by-attribute-country"
      onChange={[Function]}
      options={
        Array [
          Object {
            "id": "country-United States",
            "label": "United States",
            "value": "United States",
          },
          Object {
            "id": "country-Canada",
            "label": "Canada",
            "value": "Canada",
          },
        ]
      }
    />
    <div
      className="clearfix"
    />
  </div>
</div>
`;

exports[`CallToolDrillDown Snapshots pre-selects the first property if it is passed in the filter: CallToolDrillDownWithFilters 1`] = `
<div
  className="CallToolDrillDown"
>
  <div
    key="country"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={false}
      label="Country"
      name="filter-targets-by-attribute-country"
      onChange={[Function]}
      options={
        Array [
          Object {
            "id": "country-United States",
            "label": "United States",
            "value": "United States",
          },
          Object {
            "id": "country-Canada",
            "label": "Canada",
            "value": "Canada",
          },
        ]
      }
      value="United States"
    />
    <div
      className="clearfix"
    />
  </div>
  <div
    key="state"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={true}
      label="State"
      name="filter-targets-by-attribute-state"
      onChange={[Function]}
      options={Array []}
    />
    <div
      className="clearfix"
    />
  </div>
</div>
`;

exports[`CallToolDrillDown Snapshots pre-selects the first two properties if they passed in the filter: CallToolDrillDownWithFilters 1`] = `
<div
  className="CallToolDrillDown"
>
  <div
    key="country"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={false}
      label="Country"
      name="filter-targets-by-attribute-country"
      onChange={[Function]}
      options={
        Array [
          Object {
            "id": "country-United States",
            "label": "United States",
            "value": "United States",
          },
          Object {
            "id": "country-Canada",
            "label": "Canada",
            "value": "Canada",
          },
        ]
      }
    />
    <div
      className="clearfix"
    />
  </div>
  <div
    key="state"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={true}
      label="State"
      name="filter-targets-by-attribute-state"
      onChange={[Function]}
      options={Array []}
    />
    <div
      className="clearfix"
    />
  </div>
  <div
    key="name"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={true}
      label="Name"
      name="filter-targets-by-attribute-name"
      onChange={[Function]}
      options={Array []}
    />
    <div
      className="clearfix"
    />
  </div>
</div>
`;

exports[`CallToolDrillDown Snapshots renders filters when there are targetByAttributes: CallToolDrillDownWithFilters 1`] = `
<div
  className="CallToolDrillDown"
>
  <div
    key="country"
    style={
      Object {
        "marginBottom": "10px",
      }
    }
  >
    <SweetSelect
      clearable={false}
      label="Country"
      name="filter-targets-by-attribute-country"
      onChange={[Function]}
      options={
        Array [
          Object {
            "id": "country-United States",
            "label": "United States",
            "value": "United States",
          },
          Object {
            "id": "country-Canada",
            "label": "Canada",
            "value": "Canada",
          },
        ]
      }
    />
    <div
      className="clearfix"
    />
  </div>
</div>
`;
